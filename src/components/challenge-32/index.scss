@import '../../common';

$white: #fffbd5;
$blue: #aae0fa;
$black: #cbc2bf;
$red: #f9aa8f;
$green: #9bd3ae;

// pentagon calculations
$sqrtTenPlus2sqrt5: 3.804;
$sqrtTenMinus2sqrt5: 2.351;
$sqrt5Plus1: 3.236;
$sqrt5Minus1: 1.236;
$c1: $sqrt5Minus1 / 4;
$c2: $sqrt5Plus1 / 4;
$s1: $sqrtTenPlus2sqrt5 / 4;
$s2: $sqrtTenMinus2sqrt5 / 4;

@mixin point($x, $y, $unit) {
  // $x: x-coordinate in range [-1,1]
  // $y: y-coordinate in range [-1,1]
  // $unit: unit for display
  // convert $x to range [0,1] and multiply by 100#{$unit}
  // convert $y to range [0,1], invert (1 - $y), and multiply by 100#{$unit}
  left: ($x + 1) / 2 * 100#{$unit};
  top: (1 - ($y + 1) / 2) * 100#{$unit};
}

$shiftTop: -3.5;
$shiftLeft: 0;

.mana-symbol {
  width: 50px;
  height: 50px;
  padding: 5px;
  border: 5px black solid;
  border-radius: 50%;
  position: absolute;
  transform: translate(-35px, -35px);
}

.dot {
  width: 20px;
  height: 20px;
  border: 5px black solid;
  border-radius: 50%;
  position: absolute;
  transform: translate(-15px, -15px);
}

.white-mana {
  background: $white;
}

.blue-mana {
  background: $blue;
}

.black-mana {
  background: $black;
}

.red-mana {
  background: $red;
}

.green-mana {
  background: $green;
}

#content {
  position: relative;
  transform: scale(.9);
}

.deck {
  position: absolute;
}

.ally,
.wedge {
  clip-path: polygon(0 0, 100% 0, 50% 100%);
  transform-origin: top left;
  background-color: black;

  .background {
    clip-path: polygon(0 0, 100% 0, 50% 100%);
    width: 100%;
    height: 100%;
    transform: scale(.95);
  }
}

.landscape {
  .ally,
  .wedge {
    // length of line between mono-colors
    width: 47.55vh;
    // same distance as from midpoint of hypotenuse to 4C dot
    height: 17.274vh;
  }

  .whiteless {
    @include point(0, -1, vh);
  }

  .blueless {
    @include point(-$s1, -$c1, vh);
  }

  .blackless {
    @include point(-$s2, $c2, vh);
  }

  .redless {
    @include point($s2, $c2, vh);
  }

  .greenless {
    @include point($s1, -$c1, vh);
  }

  .azorius {
    @include point(0, $c2, vh);
    transform: rotate(36deg);

    .background {
      background: linear-gradient(90deg, $white 0%, $white 50%, $blue 50%, $blue 100%);
      // background-image: url(https://img.scryfall.com/cards/art_crop/front/8/c/8ce912d9-406b-4eba-97be-3bf1d425ee05.jpg?1562923488);
      // transform: rotate(38deg) translate(0, 235px);
    }
  }

  .dimir {
    @include point(($s1 - $s2) / 2 + $s2, (-$c1 - $c2) / 2 + $c2, vh);
    transform: rotate(108deg);

    .background {
      background: linear-gradient(90deg, $blue 0%, $blue 50%, $black 50%, $black 100%);
      // background-image: url(https://img.scryfall.com/cards/art_crop/front/d/b/db6c91ec-df14-460f-967c-f182562fe7d8.jpg?1581480984);
    }
  }

  .rakdos {
    @include point(($s1 - 0) / 2 + 0, (-1 - -$c1) / 2 + -$c1, vh);
    transform: rotate(180deg);

    .background {
      background: linear-gradient(90deg, $black 0%, $black 50%, $red 50%, $red 100%);
    }
  }

  .gruul {
    @include point((0 - -$s1) / 2 + -$s1, (-1 - -$c1) / 2 + -$c1, vh);
    transform: rotate(252deg);

    .background {
      background: linear-gradient(90deg, $red 0%, $red 50%, $green 50%, $green 100%);
    }
  }

  .selesnya {
    @include point((-$s2 - -$s1) / 2 + -$s1, (-$c1 - $c2) / 2 + $c2, vh);
    transform: rotate(324deg);

    .background {
      background: linear-gradient(90deg, $green 0%, $green 50%, $white 50%, $white 100%);
      // background-image: url(https://img.scryfall.com/cards/art_crop/front/8/1/81dc3d00-97cd-4549-b5a4-15a1e08767f5.jpg?1567181403);
    }
  }

  .jeskai {
    @include point(0, $c2, vh);
    transform: rotate(36deg) scaleY(-1);

    .background {
      background: linear-gradient(90deg, $white 0%, $white 33%, $red 33%, $red 66%, $blue 66%, $blue 100%);
    }
  }

  .sultai {
    @include point(($s1 - $s2) / 2 + $s2, (-$c1 - $c2) / 2 + $c2, vh);
    transform: rotate(108deg) scaleY(-1);

    .background {
      background: linear-gradient(90deg, $blue 0%, $blue 33%, $green 33%, $green 66%, $black 66%, $black 100%);
    }
  }

  .mardu {
    @include point(($s1 - 0) / 2 + 0, (-1 - -$c1) / 2 + -$c1, vh);
    transform: rotate(180deg) scaleY(-1);

    .background {
      background: linear-gradient(90deg, $black 0%, $black 33%, $white 33%, $white 66%, $red 66%, $red 100%);
    }
  }

  .temur {
    @include point((0 - -$s1) / 2 + -$s1, (-1 - -$c1) / 2 + -$c1, vh);
    transform: rotate(252deg) scaleY(-1);

    .background {
      background: linear-gradient(90deg, $red 0%, $red 33%, $blue 33%, $blue 66%, $green 66%, $green 100%);
    }
  }

  .abzan {
    @include point((-$s2 - -$s1) / 2 + -$s1, (-$c1 - $c2) / 2 + $c2, vh);
    transform: rotate(324deg) scaleY(-1);

    .background {
      background: linear-gradient(90deg, $green 0%, $green 33%, $black 33%, $black 66%, $white 66%, $white 100%);
    }
  }

  .mana-symbol {
    &.white-mana {
      // midpoint between blackless and redless
      @include point(0, $c2, vh);
    }

    &.blue-mana {
      // midpoint between redless and greenless
      @include point(($s1 - $s2) / 2 + $s2, (-$c1 - $c2) / 2 + $c2, vh);
    }

    &.black-mana {
      // midpoint between greenless and whiteless
      @include point(($s1 - 0) / 2 + 0, (-1 - -$c1) / 2 + -$c1, vh);
    }

    &.red-mana {
      // midpoint between whiteless and blueless
      @include point((0 - -$s1) / 2 + -$s1, (-1 - -$c1) / 2 + -$c1, vh);
    }

    &.green-mana {
      // midpoint between blueless and blackless
      @include point((-$s2 - -$s1) / 2 + -$s1, (-$c1 - $c2) / 2 + $c2, vh);
    }
  }
}

.portrait {
  .mana-symbol {
    &.white-mana {
      left: calc(50vw - 35px);
      top: 0;
    }

    &.blue-mana {
      left: calc(100vw - 70px);
      top: calc(33.754vw + 35px)
    }

    &.black-mana {
      left: calc(81.243vw - 35px);
      top: calc(100vw - 70px);
    }

    &.red-mana {
      left: calc(18.757vw + 35px);
      top: calc(100vw - 70px);
    }

    &.green-mana {
      left: 0;
      top: calc(33.754vh + 35px);
    }
  }
}
